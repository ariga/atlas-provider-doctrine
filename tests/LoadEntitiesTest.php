<?php

use PHPUnit\Framework\TestCase;

require "src/LoadEntities.php";

final class LoadEntitiesTest extends TestCase
{

    public function testDumpDDLMySQL(): void
    {
        $path = __DIR__ . "/entities";
        $result = DumpDDL([$path], "mysql");
        $expected = 'CREATE TABLE products (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id));
CREATE TABLE users (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id));
CREATE TABLE bugs (id INT AUTO_INCREMENT NOT NULL, description VARCHAR(255) NOT NULL, created DATETIME NOT NULL, status VARCHAR(255) NOT NULL, engineer_id INT DEFAULT NULL, reporter_id INT DEFAULT NULL, INDEX IDX_1E197C9F8D8CDF1 (engineer_id), INDEX IDX_1E197C9E1CFE6F5 (reporter_id), PRIMARY KEY(id));
CREATE TABLE bug_product (bug_id INT NOT NULL, product_id INT NOT NULL, INDEX IDX_897D061DFA3DB3D5 (bug_id), INDEX IDX_897D061D4584665A (product_id), PRIMARY KEY(bug_id, product_id));
ALTER TABLE bugs ADD CONSTRAINT FK_1E197C9F8D8CDF1 FOREIGN KEY (engineer_id) REFERENCES users (id);
ALTER TABLE bugs ADD CONSTRAINT FK_1E197C9E1CFE6F5 FOREIGN KEY (reporter_id) REFERENCES users (id);
ALTER TABLE bug_product ADD CONSTRAINT FK_897D061DFA3DB3D5 FOREIGN KEY (bug_id) REFERENCES bugs (id) ON DELETE CASCADE;
ALTER TABLE bug_product ADD CONSTRAINT FK_897D061D4584665A FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE;';
        $this->assertEquals($expected, $result);
    }

    public function testDumpDDLPostgres(): void
    {
        $path = __DIR__ . "/entities";
        $result = DumpDDL([$path], "postgres");
        $expected = 'CREATE TABLE products (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id));
CREATE TABLE users (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id));
CREATE TABLE bugs (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, description VARCHAR(255) NOT NULL, created TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, engineer_id INT DEFAULT NULL, reporter_id INT DEFAULT NULL, PRIMARY KEY(id));
CREATE INDEX IDX_1E197C9F8D8CDF1 ON bugs (engineer_id);
CREATE INDEX IDX_1E197C9E1CFE6F5 ON bugs (reporter_id);
CREATE TABLE bug_product (bug_id INT NOT NULL, product_id INT NOT NULL, PRIMARY KEY(bug_id, product_id));
CREATE INDEX IDX_897D061DFA3DB3D5 ON bug_product (bug_id);
CREATE INDEX IDX_897D061D4584665A ON bug_product (product_id);
ALTER TABLE bugs ADD CONSTRAINT FK_1E197C9F8D8CDF1 FOREIGN KEY (engineer_id) REFERENCES users (id) NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE bugs ADD CONSTRAINT FK_1E197C9E1CFE6F5 FOREIGN KEY (reporter_id) REFERENCES users (id) NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE bug_product ADD CONSTRAINT FK_897D061DFA3DB3D5 FOREIGN KEY (bug_id) REFERENCES bugs (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE bug_product ADD CONSTRAINT FK_897D061D4584665A FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;';
        $this->assertEquals($expected, $result);
    }

    public function testDumpDDLBadPath(): void
    {
        $this->expectException(Exception::class);
        $this->expectExceptionMessageMatches('/^Invalid path/');
        DumpDDL(["/bad/path"], "mysql");
    }

    public function testDumpDDLBadDialect(): void
    {
        $this->expectException(Exception::class);
        $this->expectExceptionMessage("Invalid dialect: bad_dialect");
        $path = __DIR__ . "/entities";
        DumpDDL([$path], "bad_dialect");
    }
}
